#!/usr/bin/env node

const path = require('path');
const fs = require('fs');

console.log('๐งช ุงุฎุชุจุงุฑ ุดุงูู ูุชุณุฌูู ุฏุฎูู ุงูุณูุจุฑ ุฃุฏูู');
console.log('='.repeat(50));

async function runTest() {
  try {
    // Test 1: Verify super admin setup using verification script
    console.log('\n๐ ุงุฎุชุจุงุฑ 1: ุงูุชุญูู ูู ุฅุนุฏุงุฏ ุงูุณูุจุฑ ุฃุฏูู...');
    const verifyScript = require('./verify_super_admin');
    await verifyScript();
    console.log('โ ุงุฎุชุจุงุฑ 1: ูุฌุญ');

    // Test 2: Check if server file exists and has correct structure
    console.log('\n๐ ุงุฎุชุจุงุฑ 2: ุงูุชุญูู ูู ููู ุงูุฎุงุฏู...');
    const serverPath = path.join(process.cwd(), 'server.js');
    if (!fs.existsSync(serverPath)) {
      throw new Error('ููู ุงูุฎุงุฏู ุบูุฑ ููุฌูุฏ');
    }
    
    const serverContent = fs.readFileSync(serverPath, 'utf8');
    if (!serverContent.includes('sharedDatabase')) {
      throw new Error('ุชุญุณูู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุบูุฑ ูุทุจู');
    }
    console.log('โ ุงุฎุชุจุงุฑ 2: ููู ุงูุฎุงุฏู ูุญุณู ูููุนุฏ ุจุดูู ุตุญูุญ');

    // Test 3: Verify auth service functionality
    console.log('\n๐ ุงุฎุชุจุงุฑ 3: ุงุฎุชุจุงุฑ ุฎุฏูุฉ ุงููุตุงุฏูุฉ...');
    const AuthService = require('./authService');
    const authService = new AuthService();
    await authService.init();
    
    const loginResult = await authService.login('alhomaly1983@gmail.com', '123456789');
    if (loginResult.success) {
      console.log('โ ุงุฎุชุจุงุฑ 3: ูุฌุญ ุชุณุฌูู ุงูุฏุฎูู');
      console.log(`๐ง ุงููุณุชุฎุฏู: ${loginResult.user.email}`);
      console.log(`๐ ุงูุฏูุฑ: ${loginResult.user.role}`);
    } else {
      throw new Error(`ูุดู ุชุณุฌูู ุงูุฏุฎูู: ${loginResult.message}`);
    }

    // Test 4: Test invalid credentials
    console.log('\n๐ ุงุฎุชุจุงุฑ 4: ุงุฎุชุจุงุฑ ุจูุงูุงุช ุฎุงุทุฆุฉ...');
    const invalidResult = await authService.login('wrong@email.com', 'wrongpassword');
    if (!invalidResult.success) {
      console.log('โ ุงุฎุชุจุงุฑ 4: ุชู ุฑูุถ ุงูุจูุงูุงุช ุงูุฎุงุทุฆุฉ ุจุดูู ุตุญูุญ');
    } else {
      throw new Error('ุฎุทุฃ: ุชู ูุจูู ุจูุงูุงุช ุฎุงุทุฆุฉ');
    }

    // Test 5: Test empty credentials
    console.log('\n๐ ุงุฎุชุจุงุฑ 5: ุงุฎุชุจุงุฑ ุจูุงูุงุช ูุงุฑุบุฉ...');
    const emptyResult = await authService.login('', '');
    if (!emptyResult.success && emptyResult.message.includes('ูุทููุจุงู')) {
      console.log('โ ุงุฎุชุจุงุฑ 5: ุชู ุฑูุถ ุงูุจูุงูุงุช ุงููุงุฑุบุฉ ุจุดูู ุตุญูุญ');
    } else {
      throw new Error('ุฎุทุฃ: ูู ูุชู ุงูุชุนุงูู ูุน ุงูุจูุงูุงุช ุงููุงุฑุบุฉ ุจุดูู ุตุญูุญ');
    }

    authService.close();

    console.log('\n๐ ุฌููุน ุงูุงุฎุชุจุงุฑุงุช ูุฌุญุช!');
    console.log('\n๐ ููุฎุต ุงููุชุงุฆุฌ:');
    console.log('โ ุฅุนุฏุงุฏ ุงูุณูุจุฑ ุฃุฏูู ูุนูู ุจุดูู ุตุญูุญ');
    console.log('โ ุงูุฎุงุฏู ูุญุณู ูููุนุฏ ุจุดูู ุตุญูุญ');
    console.log('โ ุชุณุฌูู ุงูุฏุฎูู ูุนูู ุจุงูุจูุงูุงุช ุงูุตุญูุญุฉ');
    console.log('โ ูุชู ุฑูุถ ุงูุจูุงูุงุช ุงูุฎุงุทุฆุฉ');
    console.log('โ ูุชู ุฑูุถ ุงูุจูุงูุงุช ุงููุงุฑุบุฉ');
    
    console.log('\n๐ ูุชุดุบูู ุงููุธุงู:');
    console.log('1. ุดุบู ุงูุฃูุฑ: npm start');
    console.log('2. ุงูุชุญ ุงููุชุตูุญ ุนูู: http://localhost:3000');
    console.log('3. ุงููุฑ ุนูู "ุชุณุฌูู ุงูุฏุฎูู"');
    console.log('4. ุฃุฏุฎู ุงูุจูุงูุงุช:');
    console.log('   - ุงูุจุฑูุฏ ุงูุฅููุชุฑููู: alhomaly1983@gmail.com');
    console.log('   - ูููุฉ ุงููุฑูุฑ: 123456789');

  } catch (error) {
    console.error('โ ูุดู ุงูุงุฎุชุจุงุฑ:', error.message);
    process.exit(1);
  }
}

runTest();